{"version":3,"sources":["components/TodoList/TodoList.tsx","components/PushMessage/PushMessage.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["TodoList","preparedTodosProps","className","map","todo","title","id","userId","PushMessage","chooseUser","isShownErrorMessageUser","isShownErrorMessageTitle","users","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","usersArray","preparedTodos","completed","user","find","userItem","App","state","usedTodoList","selectedUserName","titleTodo","onClick","selectedUser","eachUser","setState","length","this","action","htmlFor","type","placeholder","value","onChange","target","replace","split","join","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e88c5ddc.chunk.js","sourcesContent":["import React from 'react';\nimport { PreparedTodoType } from '../../Types/PreparedTodosType';\n\nimport './TodoList.scss';\n\ntype Props = {\n  preparedTodosProps: PreparedTodoType[],\n};\n\nexport const TodoList: React.FC<Props> = ({ preparedTodosProps }) => (\n  <ul className=\"usersList\">\n    {preparedTodosProps.map((todo: PreparedTodoType) => (\n      <li key={todo.id} className=\"usersList__user\">\n        <h3 className=\"title-todo\">\n          {todo.title}\n        </h3>\n        <p>\n          Id\n          {' '}\n          {todo.id}\n          {'    '}\n          User id\n          {' '}\n          {todo.userId}\n        </p>\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './PushMessage.scss';\n\ntype Props = {\n  title: string,\n  chooseUser: string,\n  isShownErrorMessageUser: boolean,\n  isShownErrorMessageTitle: boolean,\n};\n\nexport const PushMessage: React.FC<Props> = ({\n  title,\n  chooseUser,\n  isShownErrorMessageUser,\n  isShownErrorMessageTitle,\n}) => (\n  <div className=\"push-title\">\n    <h2>\n      Please enter correct data\n    </h2>\n    {isShownErrorMessageUser && (\n      <p>\n        {chooseUser}\n      </p>\n    )}\n    {isShownErrorMessageTitle && (\n      <p>\n        {title}\n      </p>\n    )}\n  </div>\n);\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './App.css';\n\nimport { TodoList } from './components/TodoList';\nimport { PushMessage } from './components/PushMessage';\n\nimport { UserType } from './Types/UserType';\nimport { Todo } from './Types/TodoType';\nimport { PreparedTodoType } from './Types/PreparedTodosType';\n\nimport todos from './api/todos';\nimport users from './api/users';\n\nfunction createPreparedTodos(usersArray: UserType[], todosArray: Todo[]): PreparedTodoType[] {\n  return todosArray.map(todo => ({\n    ...todo,\n    user: usersArray.find((userItem: UserType): boolean => (\n      userItem.id === todo.userId\n    )) || null,\n  }));\n}\n\nconst preparedTodos: PreparedTodoType[] = createPreparedTodos(users, todos);\n\ntype State = {\n  usedTodoList: PreparedTodoType[],\n  selectedUserName: string,\n  titleTodo: string,\n  isShownErrorMessageUser: boolean,\n  isShownErrorMessageTitle: boolean,\n};\n\nclass App extends React.Component {\n  state: State = {\n    usedTodoList: preparedTodos,\n    selectedUserName: 'Choose a user',\n    titleTodo: '',\n    isShownErrorMessageUser: false,\n    isShownErrorMessageTitle: false,\n  };\n\n  onClick = () => {\n    const selectedUser = users.find((eachUser: UserType) => (\n      eachUser.name === this.state.selectedUserName));\n\n    this.setState((state: State) => {\n      if (state.titleTodo === '' || state.selectedUserName === 'Choose a user') {\n        return {\n          isShownErrorMessageTitle: state.titleTodo === '',\n          isShownErrorMessageUser: state.selectedUserName === 'Choose a user',\n        };\n      }\n\n      return (\n        {\n          usedTodoList: [\n            ...state.usedTodoList,\n            {\n              userId: selectedUser ? selectedUser.id : null,\n              id: state.usedTodoList.length + 1,\n              title: state.titleTodo,\n              completed: false,\n              user: selectedUser,\n            },\n          ],\n          titleTodo: '',\n          selectedUserName: 'Choose a user',\n        }\n      );\n    });\n  };\n\n  render() {\n    const {\n      usedTodoList,\n      selectedUserName,\n      titleTodo,\n      isShownErrorMessageUser,\n      isShownErrorMessageTitle,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        <p>\n          <span>Users: </span>\n          {users.length}\n        </p>\n        <TodoList preparedTodosProps={usedTodoList} />\n        <form\n          action=\"/\"\n          className=\"form\"\n        >\n          <label className=\"label\" htmlFor=\"title\">\n            <h3>\n              Create new TODOs\n            </h3>\n            <input\n              id=\"title\"\n              className=\"title\"\n              type=\"text\"\n              placeholder=\"Enter the title\"\n              value={titleTodo}\n              onChange={({ target }) => {\n                const value = target.value.replace(/[^a-zа-яё0-9\\s]/gi, '').split('  ').join(' ');\n\n                this.setState({\n                  titleTodo: value === ' ' ? '' : value,\n                  isShownErrorMessageTitle: false,\n                });\n              }}\n            />\n          </label>\n          <label htmlFor=\"select\">\n            <select\n              id=\"selectUserName\"\n              className=\"select\"\n              value={selectedUserName}\n              onChange={({ target }) => {\n                this.setState({\n                  selectedUserName: target.value,\n                  isShownErrorMessageUser: false,\n                });\n              }}\n            >\n              <option\n                value=\"Choose a user\"\n                key=\"Choose a user\"\n              >\n                Choose a user\n              </option>\n              {users.map((user: UserType) => (\n                <option value={user.name} key={user.name}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          <div>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={this.onClick}\n            >\n              Add\n            </button>\n          </div>\n        </form>\n        {(isShownErrorMessageUser || isShownErrorMessageTitle)\n          && (\n            <PushMessage\n              chooseUser=\"Choose a user\"\n              isShownErrorMessageUser={isShownErrorMessageUser}\n              title=\"Enter the title\"\n              isShownErrorMessageTitle={isShownErrorMessageTitle}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}